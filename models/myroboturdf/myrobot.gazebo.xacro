<?xml version="1.0"?>
<robot name="myrobot_sim" xmlns:xacro="http://ros.org/wiki/xacro">

  <gazebo reference="cube_base">
  <material>Gazebo/Grey</material>
  </gazebo>
  
  <gazebo reference="wheel_left_link">
    <!-- <mu1>0.1</mu1>
    <mu2>0.1</mu2> -->
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <!-- <material>Gazebo/FlatBlack</material> -->
  </gazebo>

  <gazebo reference="wheel_right_link">
    <!-- <mu1>0.1</mu1>
    <mu2>0.1</mu2> -->
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <!-- <material>Gazebo/FlatBlack</material> -->
  </gazebo>

  <!-- <gazebo reference="caster_back_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo> -->
  


  <gazebo>
    <plugin name="turtlebot3_burger_controller" filename="libdiff_drive_plugin.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.174</wheelSeparation>
      <wheelDiameter>0.1365</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>

  <!-- <gazebo reference="sg90h_shaft">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="sg90v_shaft">
    <material>Gazebo/Red</material>
  </gazebo> -->

  <!-- <gazebo reference="supporto_pitch_servo_1">
     <material>Gazebo/Blue</material> 
  </gazebo> -->
  <gazebo>
    <!-- <plugin name="imu_plugin" filename="libimu_plugin.so"> -->
    <plugin name="imu_plugin" filename="libhector_gazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu/data_raw</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <xyzOffset>0 0 0</xyzOffset>
      <rpyOffset>0 0 0</rpyOffset>
      <updateRate>200</updateRate>
      <visualize>true</visualize>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>

  <gazebo reference="RealSense">
    <sensor name="camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.5</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin name="camera_plugin" filename="libdepth_camera_plugin.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <cameraName>camera_ir</cameraName>
      <imageTopicName>/camera/color/image_raw</imageTopicName>
      <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
      <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
      <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
      <frameName>footprint</frameName>
      <pointCloudCutoff>0.3</pointCloudCutoff>
      <pointCloudCutoffMax>4.5</pointCloudCutoffMax>
      <distortionK1>0</distortionK1>
      <distortionK2>0</distortionK2>
      <distortionK3>0</distortionK3>
      <distortionT1>0</distortionT1>
      <distortionT2>0</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin> 
    </sensor> 
  </gazebo>

  <!-- <gazebo reference="rightfront_force_sensor">
    <sensor name="rf_force_sensor" type="contact">
      <update_rate>30.0</update_rate>
      <always_on>true</always_on>
      <contact>
        <collision>collision_rightfront_collision</collision>
      </contact>
      <plugin name="gazebo_right_bumper_controller" filename="libcontact_plugin.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <bumperTopicName>/force/rightfront_sensor</bumperTopicName>
        <frameName>rightfront_force_sensor</frameName>
      </plugin> 
    </sensor>
  </gazebo>

  <gazebo reference="leftfront_force_sensor">
    <sensor name="lf_force_sensor" type="contact">
      <update_rate>30.0</update_rate>
      <always_on>true</always_on>
      <contact>
        <collision>collision_leftfront_collision</collision>
      </contact>
      <plugin name="gazebo_left_bumper_controller" filename="libcontact_plugin.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <bumperTopicName>/force/leftfront_sensor</bumperTopicName>
        <frameName>leftfront_force_sensor</frameName>
      </plugin> 
    </sensor>
  </gazebo> -->


<!-- <gazebo reference="LightSensor">
    <sensor name='camera' type='depth'>
      <camera name='camera'>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>320</width>
          <height>240</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
    <plugin name="light_sensor_plugin" filename="liblight_sensor_plugin.so">
      <cameraName>camera2</cameraName>
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <lightTopicName>lightdata</lightTopicName>
      <imageTopicName>color/image_raw</imageTopicName>
      <depthImageTopicName>depth/image_raw</depthImageTopicName>
      <pointCloudTopicName>depth/points</pointCloudTopicName>
      <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
      <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
      <frameName>camera_depth_optical_frame</frameName>
      <baseline>0.1</baseline>
      <distortion_k1>0.0</distortion_k1>
      <distortion_k2>0.0</distortion_k2>
      <distortion_k3>0.0</distortion_k3>
      <distortion_t1>0.0</distortion_t1>
      <distortion_t2>0.0</distortion_t2>
      <pointCloudCutoff>0.4</pointCloudCutoff>
      <robotNamespace>base_footprint</robotNamespace>
    </plugin> 
    </sensor>
  </gazebo> -->




  


    

  

  <!-- <gazebo reference="laser_sensor">
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>24</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="liblaser_plugin.so">
        <topicName>scan</topicName>
        <frameName>laser_sensor</frameName>
      </plugin>
    </sensor>
  </gazebo> -->

 

    <!-- <gazebo>
     <plugin name="ActuatorPlugin_horizontal" filename="libactuator_plugin.so">
        <motor_joint>sg90h_shaft_joint</motor_joint> 
        <commandTopicServo>cmd_servo</commandTopicServo>
        <servoTorque>10</servoTorque>
        <servoodometryTopic>odom</servoodometryTopic>
        <servoodometryFrame>odom</servoodometryFrame>
        <diameter_servo>0.004</diameter_servo>
        <servoAcceleration>1</servoAcceleration>
        <updateRatesg90>30</updateRatesg90>
        <robotNamespace>sg90h</robotNamespace>
        <servoodometrySource>world</servoodometrySource>
        <servoBaseFrame>supporto_sg90</servoBaseFrame>
        <publishServoTF>true</publishServoTF>
        <publishTF>true</publishTF>
        <publishservoOdomTF>true</publishservoOdomTF>
        <rosDebugLevel>na</rosDebugLevel> 
      </plugin> 
  </gazebo>

  <gazebo>
    <plugin name="ActuatorPlugin_vertical" filename="libactuator_plugin.so">
        <motor_joint>sg90v_shaft_joint</motor_joint> 
        <commandTopicServo>cmd_servo</commandTopicServo>
        <servoTorque>10</servoTorque>
        <servoodometryTopic>odom</servoodometryTopic>
        <servoodometryFrame>odom</servoodometryFrame>
        <diameter_servo>0.004</diameter_servo>
        <servoAcceleration>1</servoAcceleration>
        <updateRatesg90>30</updateRatesg90>
        <robotNamespace>sg90v</robotNamespace>
        <servoodometrySource>world</servoodometrySource>
        <servoBaseFrame>sg90v</servoBaseFrame>
        <publishServoTF>true</publishServoTF>
        <publishTF>true</publishTF>
        <publishservoOdomTF>true</publishservoOdomTF>
        <rosDebugLevel>na</rosDebugLevel> 
      </plugin> 
  </gazebo> -->


  <!-- attached to left wheel and fully working-->
  <!-- <gazebo>
    <plugin name="pwm_vel_plugin" filename="libcustom_ros_dc_motor.so">
        <command_topic>/motor/voltage_norm</command_topic>
        <velocity_topic>/motor/velocity</velocity_topic>
        <update_rate>10.0</update_rate>
        <encoder_topic>/motor/encoder</encoder_topic>
        <current_topic>/motor/current</current_topic>
        <supply_topic>/motor/supply_voltage</supply_topic>
        <motor_nominal_voltage>24.0</motor_nominal_voltage> 
        <moment_of_inertia>0.001</moment_of_inertia> 
        <damping_ratio>0.0001</damping_ratio> 
        <electromotive_force_constant>0.03</electromotive_force_constant> 
        <electric_resistance>13.8</electric_resistance> 
        <electric_inductance>0.001</electric_inductance> 
        <velocity_noise>0.0</velocity_noise>
        <gear_ratio>1.0</gear_ratio>
        <publish_velocity>true</publish_velocity>
        <publish_encoder>true</publish_encoder>
        <publish_current>false</publish_current>
        <publish_motor_joint_state>true</publish_motor_joint_state>
        <encoder_ppr>111</encoder_ppr>
        <motor_wrench_frame>base_footprint</motor_wrench_frame> 
        <motor_shaft_joint>wheel_left_joint</motor_shaft_joint>
      </plugin>
  </gazebo> -->
  <!-- attached to left wheel and fully working-->
  <!-- <gazebo>
    <plugin name="pwm_vel_plugin" filename="libcustom_ros_dc_motor.so">
        <command_topic>/motor/voltage_norm</command_topic>
        <velocity_topic>/motor/velocity</velocity_topic>
        <update_rate>10.0</update_rate>
        <encoder_topic>/motor/encoder</encoder_topic>
        <current_topic>/motor/current</current_topic>
        <supply_topic>/motor/supply_voltage</supply_topic>
        <motor_nominal_voltage>24.0</motor_nominal_voltage> 
        <moment_of_inertia>0.001</moment_of_inertia> 
        <damping_ratio>0.0001</damping_ratio> 
        <electromotive_force_constant>0.03</electromotive_force_constant> 
        <electric_resistance>13.8</electric_resistance> 
        <electric_inductance>0.001</electric_inductance> 
        <velocity_noise>0.0</velocity_noise>
        <gear_ratio>1.0</gear_ratio>
        <publish_velocity>true</publish_velocity>
        <publish_encoder>true</publish_encoder>
        <publish_current>false</publish_current>
        <publish_motor_joint_state>true</publish_motor_joint_state>
        <encoder_ppr>111</encoder_ppr>
        <motor_wrench_frame>base_footprint</motor_wrench_frame> 
        <motor_shaft_joint>wheel_right_joint</motor_shaft_joint>
      </plugin>
  </gazebo> -->
  </robot>
